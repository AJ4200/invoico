import { jsPDF } from "jspdf";

export const generatePDF = (
  clientInfo: { name: string; email: string; address: string; phone: string },
  invoiceDetails: {
    invoiceNumber: string;
    invoiceDate: string;
    dueDate: string;
  },
  services: {
    description: string;
    date: string;
    quantity: number;
    unitPrice: number;
    total: number;
  }[],
  tax: number,
  discount: number,
  notes: string
) => {
  const doc = new jsPDF();

  // Your information (hardcoded)
  const yourInfo = {
    name: "JE Productions",
    email: "abeljackson33@gmail.com",
    address: "1234 Street Name, City, Country",
    phone: "0626775823",
    website: "www.aj4200.dev",
  };

  // Add a banner (your logo)
  doc.setFillColor(63, 81, 181);
  doc.rect(0, 0, 210, 20, "F");

  doc.setTextColor(255, 255, 255);
  doc.setFontSize(20);
  doc.text(yourInfo.name, 10, 12);

  // Add your information
  doc.setTextColor(0, 0, 0);
  doc.setFontSize(12);
  doc.text(`Email: ${yourInfo.email}`, 10, 30);
  doc.text(`Address: ${yourInfo.address}`, 10, 40);
  doc.text(`Phone: ${yourInfo.phone}`, 10, 50);
  doc.text(`Website: ${yourInfo.website}`, 10, 60);

  // Add client information
  doc.text(`Invoice for: ${clientInfo.name}`, 140, 30);
  doc.text(`Email: ${clientInfo.email}`, 140, 40);
  doc.text(`Address: ${clientInfo.address}`, 140, 50);
  doc.text(`Phone: ${clientInfo.phone}`, 140, 60);

  // Add invoice details
  doc.text(`Invoice Number: ${invoiceDetails.invoiceNumber}`, 10, 80);
  doc.text(`Invoice Date: ${invoiceDetails.invoiceDate}`, 10, 90);
  doc.text(`Due Date: ${invoiceDetails.dueDate}`, 10, 100);

  // Add services
  let currentY = 120;
  services.forEach((service, index) => {
    doc.text(`Service ${index + 1}: ${service.description}`, 10, currentY);
    doc.text(`Date: ${service.date}`, 10, currentY + 10);
    doc.text(`Quantity/Hours: ${service.quantity}`, 10, currentY + 20);
    doc.text(`Unit Price: $${service.unitPrice.toFixed(2)}`, 10, currentY + 30);
    doc.text(`Total: $${service.total.toFixed(2)}`, 10, currentY + 40);
    currentY += 50;
  });

  // Add cost breakdown
  const subtotal = services.reduce((acc, service) => acc + service.total, 0);
  doc.text(`Subtotal: $${subtotal.toFixed(2)}`, 140, currentY);
  doc.text(`Tax: $${tax.toFixed(2)}`, 140, currentY + 10);
  doc.text(`Discount: $${discount.toFixed(2)}`, 140, currentY + 20);
  const grandTotal = subtotal + tax - discount;
  doc.text(`Grand Total: $${grandTotal.toFixed(2)}`, 140, currentY + 30);

  // Add notes
  doc.text("Notes:", 10, currentY + 50);
  doc.text(notes, 10, currentY + 60);

  // Add payment terms and thank you message
  doc.text("Payment Instructions:", 10, currentY + 80);
  doc.text(
    "Please make the payment via bank transfer to account (Capitect)1234094529 or PayShap at 0626775823",
    10,
    currentY + 90
  );
  doc.text("Thank you for your business!.", 10, currentY + 100); 
    doc.setFontSize(9);
  doc.text("This document was generated by auto", 10, currentY + 120);

  // Save the PDF
  doc.save(`${clientInfo.name}-invoice.pdf`);
};
